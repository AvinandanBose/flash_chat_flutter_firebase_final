Index: lib/screens/chat_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/chat_screen.dart b/lib/screens/chat_screen.dart
--- a/lib/screens/chat_screen.dart	
+++ b/lib/screens/chat_screen.dart	(date 1653372662749)
@@ -1,13 +1,7 @@
-import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:firebase_auth/firebase_auth.dart';
 import 'package:flutter/material.dart';
 import 'package:flash_chat_flutter_firebase/constants.dart';
 
-<<<<<<< HEAD
-final _firestore = FirebaseFirestore.instance;
-=======
-
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
 class ChatScreen extends StatefulWidget {
   static const String id = 'chat_screen';
   @override
@@ -15,15 +9,8 @@
 }
 
 class _ChatScreenState extends State<ChatScreen> {
-
-<<<<<<< HEAD
-  final messageTextController = TextEditingController();
-=======
-  final _firestore = FirebaseFirestore.instance;
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
   final _auth = FirebaseAuth.instance;
   User? loggedInUser;
-  String? messageText;
 
   void getCurrentUser() async {
     try {
@@ -37,22 +24,6 @@
       print(e);
     }
   }
-
-  // void getMessages() async{
-  //   final messages = await _firestore.collection('messages').get();
-  //   for(var message in messages.docs){
-  //     print(message.data());
-  //   }
-  // }
-  void getMessages() async {
-    await for (var snapshot in _firestore.collection('messages').snapshots()) {
-      for (var messages in snapshot.docs) {
-        print(messages.data());
-      }
-    }
-  }
-
-
   @override
   void initState() {
     super.initState();
@@ -68,9 +39,7 @@
           IconButton(
               icon: Icon(Icons.close),
               onPressed: () {
-                // _auth.signOut();
-                // Navigator.pop(context);
-                getMessages();
+                //Implement logout functionality
               }),
         ],
         title: Text('⚡️Chat'),
@@ -81,38 +50,6 @@
           mainAxisAlignment: MainAxisAlignment.spaceBetween,
           crossAxisAlignment: CrossAxisAlignment.stretch,
           children: <Widget>[
-<<<<<<< HEAD
-            MessagesStream(),
-=======
-        StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(
-            stream: _firestore.collection('messages').snapshots(),
-          builder: (context, snapshot) {
-            if (!snapshot.hasData) {
-              return const Center(
-                child: CircularProgressIndicator(
-                  backgroundColor: Colors.lightBlueAccent,
-                ),
-              );
-            }
-            final messages = snapshot.data!.docs;
-            List<MessageBubble> messageWidgets = [];
-            for (var message in messages) {
-              final messageText = message.data()['text'];
-              final messageSender = message.data()['sender'];
-
-              final messageWidget = MessageBubble(text: messageText,sender: messageSender);
-
-              messageWidgets.add(messageWidget);
-            }
-            return Expanded(
-              child: ListView(
-                padding: EdgeInsets.symmetric(horizontal: 10.0, vertical: 20.0),
-                children:messageWidgets,
-              )
-            );
-          },
-        ),
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
             Container(
               decoration: kMessageContainerDecoration,
               child: Row(
@@ -120,26 +57,15 @@
                 children: <Widget>[
                   Expanded(
                     child: TextField(
-                      controller: messageTextController,
                       onChanged: (value) {
-                        messageText = value;
-                        
+                        //Do something with the user input.
                       },
                       decoration: kMessageTextFieldDecoration,
                     ),
                   ),
                   FlatButton(
                     onPressed: () {
-                      //messageText + loggedInUser
-<<<<<<< HEAD
-                      messageTextController.clear();
-=======
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
-                      _firestore.collection('messages').add({
-                        'text' : messageText,
-                        'sender': loggedInUser?.email,
-
-                      });
+                      //Implement send functionality.
                     },
                     child: Text(
                       'Send',
@@ -155,93 +81,3 @@
     );
   }
 }
-
-<<<<<<< HEAD
-class MessagesStream extends StatelessWidget {
-  const MessagesStream({Key? key}) : super(key: key);
-
-  @override
-  Widget build(BuildContext context) {
-    return StreamBuilder<QuerySnapshot<Map<String, dynamic>>>(
-      stream: _firestore.collection('messages').snapshots(),
-      builder: (context, snapshot) {
-        if (!snapshot.hasData) {
-          return const Center(
-            child: CircularProgressIndicator(
-              backgroundColor: Colors.lightBlueAccent,
-            ),
-          );
-        }
-        final messages = snapshot.data!.docs;
-        List<MessageBubble> messageWidgets = [];
-        for (var message in messages) {
-          final messageText = message.data()['text'];
-          final messageSender = message.data()['sender'];
-
-          final messageWidget = MessageBubble(text: messageText,sender: messageSender);
-
-          messageWidgets.add(messageWidget);
-        }
-        return Expanded(
-            child: ListView(
-              padding: EdgeInsets.symmetric(horizontal: 10.0, vertical: 20.0),
-              children:messageWidgets,
-            )
-        );
-      },
-    );
-  }
-}
-
-
-=======
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
-class MessageBubble extends StatefulWidget {
-  final String? sender;
-  final String? text;
-  const MessageBubble({Key? key, this.text,this.sender}) : super(key: key);
-
-  @override
-  State<MessageBubble> createState() => _MessageBubbleState();
-}
-
-class _MessageBubbleState extends State<MessageBubble> {
-
-
-  @override
-  Widget build(BuildContext context) {
-    return Padding(
-      padding: const EdgeInsets.all(8.0),
-      child: Column(
-<<<<<<< HEAD
-        crossAxisAlignment: CrossAxisAlignment.end,
-        children: <Widget>[
-          Text('${widget.sender}',
-          style: const TextStyle(
-            fontSize: 12.0,
-            color: Colors.black54,
-          ),),
-=======
-        children: <Widget>[
-          Text('${widget.sender}'),
->>>>>>> d8848ffa07177017f260f9b091cdde8f2874885c
-         Material(
-          borderRadius: BorderRadius.circular(50.0),
-          elevation:5.0, //Drop Shadow to each text
-          color: Colors.lightBlueAccent,
-          child: Padding(
-            padding: const EdgeInsets.symmetric(vertical: 10.0, horizontal: 20.0),
-            child: Text(
-              '${widget.text}',
-              style: TextStyle(
-                color: Colors.white,
-                fontSize: 15.0,
-              ),
-            ),
-          ),
-        ),
-    ],
-      ),
-    );
-  }
-}
